[project]
name = "transformd"
version = "0.1.0"
description = "Transform dictionaries into whatever your heart desires"
authors = [
    { name = "Adam Hill" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">= 3.9"
readme = "README.md"

dependencies = [
    "mergedeep==1.3.4",
    "typeguard==4.1.5"
]

[project.urls]
"Homepage" = "https://github.com/adamghill/transformd"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest",
    "coverage[toml]>=7.3.2",
    "mypy",
    "ruff",
    "pytest-cov>=4.1.0",
]

[tool.rye.scripts]
test = "pytest"
format = "ruff format ."
cov = "pytest --cov=transformd"

[tool.ruff]
src = ["src/transformd"]
exclude = []
target-version = "py39"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Ignore unused variables
  "F841",
   # Ignore exception strings
  "EM101", "EM102",
  # Conflicts with formatter
  "ISC001"
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.pydocstyle]
convention = "google"  # Accepts: "google", "numpy", or "pep257".

[tool.ruff.isort]
known-first-party = [
  "transformd",
  "tests",
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.pytest.ini_options]
addopts = "--quiet --failed-first -p no:warnings"
testpaths = [
    "tests"
]
markers = [
]

[tool.hatch.metadata]
allow-direct-references = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
